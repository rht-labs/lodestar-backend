%dev.quarkus.http.port=8081

quarkus.log.level=INFO
quarkus.log.category."io.smallrye.jwt".level=${JWT_LOGGING:INFO}
quarkus.log.category."com.redhat.labs.omp".level=${OMP_BACKEND_LOGGING:DEBUG}

# open api
quarkus.swagger-ui.always-include=true

# native properties
quarkus.native.enable-https-url-handler=true
quarkus.ssl.native=true

# cors properties
quarkus.http.cors=true

# jwt verification configuration
mp.jwt.verify.publickey.location=${JWT_PUBKICKEY_LOCATION:META-INF/resources/publicKey.pem}
mp.jwt.verify.issuer=${JWT_ISSUER:https://quarkus.io/using-jwt-rbac}

# enable jwt support
quarkus.smallrye-jwt.enabled=${JWT_ENABLE:true}

# allow all for the web socket endpoint - will be authenticated using filter
quarkus.http.auth.permission.permit1.paths=/engagements/events/*
quarkus.http.auth.permission.permit1.policy=permit
quarkus.http.auth.permission.permit1.methods=GET

# define auth roles
quarkus.http.auth.policy.role-reader.roles-allowed=reader,writer
quarkus.http.auth.policy.role-writer.roles-allowed=writer

# set the /config endpoint(s) to reader or admin role
quarkus.http.auth.permission.read.paths=/config
quarkus.http.auth.permission.read.policy=role-reader

# set the /engagements/* endpoint(s) to writer for PUT and POST methods
quarkus.http.auth.permission.writer.paths=/engagements/*
quarkus.http.auth.permission.writer.policy=role-writer
quarkus.http.auth.permission.writer.methods=PUT,POST

# set the /engagements/* endpoint(s) to reader for other methods
quarkus.http.auth.permission.reader.paths=/engagements/*
quarkus.http.auth.permission.reader.policy=role-reader

quarkus.package.uber-jar=true

# mongo
mongo.user=${MONGODB_USER:mongouser}
mongo.password=${MONGODB_PASSWORD:mongopassword}
mongo.service.name=${DATABASE_SERVICE_NAME:localhost:27017}
quarkus.mongodb.database=${MONGODB_DATABASE:engagement}

quarkus.mongodb.connection-string=mongodb://${mongo.user}:${mongo.password}@${mongo.service.name}/${quarkus.mongodb.database}

# git api
omp.gitlab.api/mp-rest/url=${OMP_GITLAB_API_URL:http://omp-git-api:8080}

webhook.token=${WEBHOOK_TOKEN:t}
cleanup.token=${CLEANUP_TOKEN:OFF}
status.file=status.json

# version
git.commit=${OMP_BACKEND_GIT_COMMIT:not.set}
git.tag=${OMP_BACKEND_GIT_TAG:not.set}
version.yml=${OMP_BACKEND_VERSIONS_PATH:/config/version-manifest.yml}

# git sync
auto.save.cron.expr=0/30 * * * * ?
